apiVersion: apps/v1
kind: Deployment

#imagePullPolicy: {{ .Values.image.pullPolicy }}

metadata:
  name: {{ .Values.name }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.name }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    app.kubernetes.io/name: {{ .Values.name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    app.kubernetes.io/component: {{ .Values.component | default .Values.name | quote }}
    app.kubernetes.io/part-of: {{ .Values.partOf | default .Values.namespace | quote }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.name }}
  {{- if .Values.replicaCount }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
        {{- if .Values.aadpodidentity.enabled }}
        {{- if .Values.aadpodidentity.selector }}
        aadpodidbinding: {{ .Values.aadpodidentity.selector  }}
        {{- else }}
        aadpodidbinding: "{{ .Values.name }}-identity"
        {{- end }}
        {{- end }}
        {{- if .Values.podLabels }}
        {{- toYaml $.Values.podLabels | nindent 8 }}
        {{- end }}
    spec:
      affinity: {{ toYaml .Values.affinity | nindent 8 }}

      volumes:
        {{- if .Values.volumes }}
        {{- toYaml .Values.volumes | nindent 8 }}
        {{- end }}
        {{- if .Values.aadpodidentity.akvcsidriver.enabled }}   
        - name: secrets-store
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "{{ .Values.name }}-akvcsistore"
        {{- end }}
      
      containers:
      - name: {{ default (printf "%s-%s" .Values.namespace .Values.name) .Values.containerName | quote }}
        image: {{ printf "%s:%s" .Values.image.repository .Values.image.tag | quote }}
        {{- with .Values.resources }}
        resources:
          {{- with .requests }}
          requests:
            memory: {{ .memory | quote }}
            cpu: {{ .cpu | quote }}
          {{- end }}
          {{- with .limits }}
          limits:
            memory: {{ .memory | quote }}
            cpu: {{ .cpu | quote }}
          {{- end }}
        {{- end }}

        {{- if .Values.ports }}
        ports:
        {{- range .Values.ports }}
        - containerPort: {{ .containerPort }}
          name: {{ .name }}
        {{- end }}
        {{- end }}

        {{- if .Values.envVars }}
        env:
          {{- range .Values.envVars }}
          {{- if .value }}
          - name: {{ .name | quote }}
            value: {{ .value | quote }}
          {{- else }}
          - name: {{ .name | quote }}
            valueFrom:
              secretKeyRef:
                name: {{ .valueFrom.secretKeyRef.name | quote }}
                key: {{ .valueFrom.secretKeyRef.key | quote }}
          {{- end }}
          {{- end }}
        {{- end }}
        
        volumeMounts:
          {{- if .Values.volumeMounts }}
          {{- toYaml .Values.volumeMounts | nindent 10 }}
          {{- end }}
          {{- if .Values.aadpodidentity.akvcsidriver.enabled }}
          - name: secrets-store
            mountPath: "/mnt/secrets-store"
            readOnly: true
          {{- end }}
        livenessProbe:
          httpGet:
            path: {{ .Values.healthEndpoint | quote }}
            port: {{ .Values.healthPort }}
          initialDelaySeconds: {{ .Values.healthInitialDelaySeconds }}
          periodSeconds: {{ .Values.healthPeriodSeconds }}
        readinessProbe:
          httpGet:
            path: {{ .Values.readyEndpoint | quote }}
            port: {{ .Values.readyPort }}
          initialDelaySeconds: {{ .Values.readyInitialDelaySeconds }}
          periodSeconds: {{ .Values.readyPeriodSeconds }}
