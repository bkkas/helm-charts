# Default values for app.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates. 

namespace: app
name: app

# By default `component` will be equal to `{{ .Values.name }}`
#component: my-component

# By default `partOf` will be equal to `{{ .Values.namespace }}`
#partOf: my-system

# By default `containerName` will be equal to `{{ .Values.namespace }}-{{.Values.name }}`
containerName:

ports:
#  - protocol: TCP
#    port: 80
#    targetPort: 80

image:
  repository: "ubuntu"
  tag: latest
  pullPolicy: IfNotPresent
  # Flux Image policy & repository  
  update: 
    enabled: true
    # Image repository
    # https://fluxcd.io/docs/components/image/imagerepositories/
    interval: 1m0s
    # Image policy
    # https://fluxcd.io/docs/components/image/imagepolicies/
    filterTags:
      # ${PREFIX}-${GIT_SHA:0:7}-$(date +%s)
      pattern: '^dev-[a-fA-F0-9]+-(?P<ts>.*)'
      extract: '$ts'
    policy:
      numerical:
        order: asc

resources:
  requests:
    memory: "128Mi"
    cpu: "0.25"
  limits:
    memory: "256Mi"
    cpu: "0.5"

replicaCount: 1

# The name of the certificate used on the listener on the application gateway
# This certificate and listener is not created by this chart
applicationGatewayCertName: cert-appgw-listener

ingress:
  enabled: false
  host: your.hostname.io
  http:
    - path: /app/*
      pathType: prefix
      port:  80

# Prerequisites:
# - Create User Assigned Identity for your app and give it appropriate permissions.
aadpodidentity:
  enabled: false
  # 0 = User Assigned Managed Identity, 1 = Service Principal with client secret, 2 = Service Principal with certificate
  type: 0 
  # Resource ID for the Managed Identity (az identity show --name <name> --resource-group <resource-group> --query id)
  resourceID: /subscriptions/<subscription id>/resourceGroups/<resource-group id>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/<mi-name>
  # Client ID for the Managed Identity (az identity show --name <name> --resource-group <resource-group> --query clientId)
  clientID: 00000000-0000-0000-0000-000000000000

  # Azure Key Vault CSI-driver
  # Needs AAD Pod Identity
  akvcsidriver:
    enabled: false
    provider: azure
    usePodIdentity: true               # Set to true for using aad-pod-identity to access your key vault
    keyvaultName: your-key-vault-name  # Set to the name of your key vault
    cloudName: AzurePublicCloud        # [OPTIONAL for Azure] if not provided, the Azure environment defaults to AzurePublicCloud
    tenantId: your-tenant-id           # The tenant ID of the key vault
    
    # These MUST reflect the objects in the array below. objectName = objectName in the array.
    # This will use the mounted secrets and create k8s secrets which you can use for environment variables.
    # You can create multiple secret objects in one secret.
    secretObjects:
      #- secretName: app-key1
      #  objectName: key1
      #  key: secret-key-name
      #  type: Opaque
      #- secretName: app-key1
      #  objectName: key2
      #  key: secret-key-name
      #  type: Opaque
      #- secretName: app-key2
      #  objectName: key3
      #  key: secret-key-name
      #  type: Opaque
      #- secretName: app-secret1
      #  objectName: secret1
      #  key: tls-key
      #  type: kubernetes.io/tls
      #- secretName: app-secret1
      #  objectName: secret2
      #  key: tls-key
      #  type: kubernetes.io/tls
      #- secretName: app-secret2
      #  objectName: secret3
      #  key: tls-key
      #  type: kubernetes.io/tls
      #- secretName: app-pem-cert
      #  objectName: cert1
      #  key: tls-key
      #  type: kubernetes.io/tls
    objects: #|
      #array:
      #  - |
      #    objectName: secret1
      #    objectType: secret
      #  - |
      #    objectName: secret2
      #    objectType: secret
      #  - |
      #    objectName: secret3
      #    objectType: secret
      #  - |
      #    objectName: key1
      #    objectType: key
      #  - |
      #    objectName: key2
      #    objectType: key
      #  - |
      #    objectName: key3
      #    objectType: key
      #  - |
      #    objectName: cert1
      #    objectType: cert

envVars:
  #- name: ENV1
  #  value: ENV1-VALUE
  #- name: ENV2
  #  valueFrom:
  #    secretKeyRef:
  #      name: app-secret1
  #      key: tls-key

    
healthEndpoint: /health
healthPort: 80

readyEndpoint: /health
readyPort: 80
