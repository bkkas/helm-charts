# -- (REQUIRED) The namespace the application will be deployed in
namespace: app-namespace

# -- (REQUIRED) Name your application
name: app-name

# -- By default `containerName` will be equal to `{{ .Values.namespace }}-{{.Values.name }}`
containerName:

ports:
#  - protocol: TCP
#    port: 80
#    targetPort: 80

# -- (REQUIRED) Set health endpoint
healthEndpoint: /health
# -- (REQUIRED) Set health port
healthPort: 80

healthInitialDelaySeconds: 3
healthPeriodSeconds: 5

# -- (REQUIRED) Set ready endpoint
readyEndpoint: /health
# -- (REQUIRED) Set ready port
readyPort: 80

readyInitialDelaySeconds: 5
readyPeriodSeconds: 10

# -- (Optional) Add pod labels
podLabels: []

# -- (Optional) Affinity rules
affinity:
  nodeAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 1
        preference:
          matchExpressions:
            - key: kubernetes.azure.com/mode
              operator: In
              values:
                - user

image:
  # (REQUIRED) -- Image repository
  repository: "ubuntu"
  # (REQUIRED) -- Image version
  tag: latest
  # -- Always, IfNotPresent or Never
  pullPolicy: IfNotPresent
  # -- Flux Image policy & repository
  update:
    # -- (REQUIRED) Enable or disable Flux Image policy
    enabled: false
    # -- Image repository - https://fluxcd.io/docs/components/image/imagerepositories/
    interval: 1m0s
    # -- Image policy - https://fluxcd.io/docs/components/image/imagepolicies/
    filterTags:
      # -- ${PREFIX}-${GIT_SHA:0:7}-$(date +%s)
      pattern: "^dev-[a-fA-F0-9]+-(?P<ts>.*)"
      extract: "$ts"
    policy:
      numerical:
        order: asc

resources:
  # -- Set resource requests
  requests:
    memory: "128Mi"
    cpu: "0.25"
  # -- Set resource limits
  limits:
    memory: "256Mi"
    cpu: "0.5"

# -- Replica count of pods
replicaCount: 1

ingress:
  # -- Enable or disable ingress
  enabled: false
  # -- Set your hostname
  host:
  # -- The name of the certificate used on the listener on the application gateway
  applicationGatewayCertName:
  # -- Default request timeout https://azure.github.io/application-gateway-kubernetes-ingress/annotations/#request-timeout
  timeout: 30
  http:
    - path: /app/*
      pathType: prefix
      # -- Backend port
      port: 80

# Prerequisites:
# - Create User Assigned Identity for your app and give it appropriate permissions.
aadpodidentity:
  # -- Enable or disable AAD Pod Identity
  enabled: false
  # -- Use existing AzureIdentityBinding, Will will suppress creation of AadPodIdentity and AzureIdentityBinding
  selector:
  # -- 0 = User Assigned Managed Identity, 1 = Service Principal with client secret, 2 = Service Principal with certificate
  type: 0
  # -- Resource ID for the Managed Identity (az identity show --name <name> --resource-group <resource-group> --query id)
  resourceID:
  # -- Client ID for the Managed Identity (az identity show --name <name> --resource-group <resource-group> --query clientId)
  clientID:

  # Azure Key Vault CSI-driver
  # Needs AAD Pod Identity
  akvcsidriver:
    # -- Enable or disable Azure Key Vault CSI Driver
    enabled: false
    provider: azure
    # -- Set to true for using aad-pod-identity to access your key vault
    usePodIdentity: true
    # -- Set to the name of your key vault
    keyvaultName:
    # -- [OPTIONAL for Azure] if not provided, the Azure environment defaults to AzurePublicCloud
    cloudName: AzurePublicCloud
    # -- The tenant ID of the key vault
    tenantId:

    # These MUST reflect the objects in the array below. objectName = objectName in the array.
    # This will use the mounted secrets and create k8s secrets which you can use for environment variables.
    # You can create multiple secret objects in one secret.
    secretObjects:
      # - secretName: app-key1
      #   objectName: key1
      #   key: secret-key-name
      #   type: Opaque
      #   data:
      #    - objectName: secret-key-name
      #      objectType: secret
      #      key: secret-key-name
      # - secretName: app-key1
      #   objectName: key2
      #   key: secret-key-name
      #   type: Opaque
      #   data:
      #    - objectName: secret-key-name
      #      objectType: secret
      #      key: secret-key-name
      #    - objectName: secret-key2-name
      #      objectType: secret
      #      key: secret-key2-name

envVars:
  # - name: ENV1
  #   value: ENV1-VALUE
  # - name: ENV2
  #   valueFrom:
  #     secretKeyRef:
  #       name: app-secret1
  #       key: tls-key

volumes:
# - name: secrets-store
#   csi:
#     driver: secrets-store.csi.k8s.io
#     readOnly: true
#     volumeAttributes:
#       secretProviderClass: "{{ .Values.name }}-akvcsistore"

volumeMounts:
# - name: secrets-store
#   mountPath: "/mnt/secrets-store"
#   readOnly: true
